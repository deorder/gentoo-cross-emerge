#!/bin/bash

CD_PYTHON_PREFIX_DIR=/usr

CD_TARGET_PYTHON_PREFIX_DIR=usr
CD_TARGET_PKGCONFIG_PREFIX_DIR=usr

CD_CUR_DIR=$(dirname "${BASH_SOURCE[0]}")

source "${CD_CUR_DIR}/crossdev-functions.sh"

cd_parse_arguments $@

cd_parse_extra_arguments() {

  while (( ${#1} )); do
    case ${1} in
      *-cd-use-distcc)
      CD_USE_DISTCC=1
      ;;
      *-cd-wrapper-dir=*)
      CD_WRAPPER_DIR="${1#*=}"
      ;;
      *-cd-wrapper-dir)
      shift; CD_WRAPPER_DIR=${1}
      ;;
      *-cd-wrapper-prefix-dir=*)
      CD_WRAPPER_PREFIX_DIR="${1#*=}"
      ;;
      *-cd-wrapper-prefix-dir)
      shift; CD_WRAPPER_PREFIX_DIR=${1}
      ;;
      *-cd-wrapper-install-dir=*)
      CD_WRAPPER_INSTALL_DIR="${1#*=}"
      ;;
      *-cd-wrapper-install-dir)
      shift; CD_WRAPPER_INSTALL_DIR=${1}
      ;;
    esac
    shift
  done

  if [ -z "${CD_WRAPPER_DIR}" ] ; then
    CD_WRAPPER_DIR="${CD_TMP_DIR}/wrapper-${CD_TARGET}"
  fi

  if [ -z "${CD_WRAPPER_INSTALL_DIR}" ] ; then
    CD_WRAPPER_INSTALL_DIR="${CD_WRAPPER_DIR}"
  fi

  if [ -z "${CD_WRAPPER_PREFIX_DIR}" ] ; then
    CD_WRAPPER_PREFIX_DIR="${CD_WRAPPER_DIR}"
  fi
}

cd_parse_extra_arguments "${CD_ARGS[@]}"

if [ ! -z "${CD_HELP}" ]; then
  cd_print_usage_header
  echo "--cd-wrapper-dir <dir> (Wrapper dir) (${CD_WRAPPER_DIR}}"
  echo "--cd-wrapper-prefix-dir <dir> (Wrapper prefix dir) (${CD_WRAPPER_PREFIX_DIR}}"
  echo "--cd-wrapper-install-dir <dir> (Wrapper install dir) (${CD_WRAPPER_INSTALL_DIR})"
  echo "--cd-use-distcc (Use distcc)"
  exit 1
fi

if [ ! -z "${CD_USE_DISTCC}" ]; then
  einfo "Using distcc for wrapper"
fi

mkdir -p ${CD_NODEBUG:--v} "${CD_WRAPPER_INSTALL_DIR}"
mkdir -p ${CD_NODEBUG:--v} "${CD_WRAPPER_INSTALL_DIR}/bin"
mkdir -p ${CD_NODEBUG:--v} "${CD_WRAPPER_INSTALL_DIR}/lib"
mkdir -p ${CD_NODEBUG:--v} "${CD_WRAPPER_INSTALL_DIR}/lib/pkgconfig"
mkdir -p ${CD_NODEBUG:--v} "${CD_WRAPPER_INSTALL_DIR}/lib64"
mkdir -p ${CD_NODEBUG:--v} "${CD_WRAPPER_INSTALL_DIR}/lib64/pkgconfig"

for CD_TOOL in cc gcc cpp g++ c++ clang clang++; do

  CD_TOOL_PATH="$(readlink -e "/usr/bin/${CD_TARGET}-${CD_TOOL}" 2> /dev/null)"
  if [ ! -z "${CD_USE_DISTCC}" ]; then
    if [ -f "/usr/lib/distcc/bin/${CD_TARGET}-${CD_TOOL}" ]; then
      CD_TOOL_PATH="$(readlink -e "/usr/lib/distcc/bin/${CD_TARGET}-${CD_TOOL}" 2> /dev/null)"
    fi
  fi

  if [ -f "${CD_TOOL_PATH}" ]; then

    ebegin "Generating wrapper for ${CD_TOOL}"

cat << EOF > "${CD_WRAPPER_INSTALL_DIR}/bin/${CD_TARGET}-${CD_TOOL}"
#!/bin/bash
ARGS=("\$@")
for ((index=0; index<"\${#ARGS[@]}"; ++index)); do
FILTER=\${ARGS[index]}
FILTER_SRC='-I/usr/include'
FILTER_DST='-I${CD_TARGET_DIR}/usr/include'
FILTER="\${FILTER/\${FILTER_SRC}/\${FILTER_DST}}"
FILTER_SRC='-L/lib'
FILTER_DST='-L${CD_TARGET_DIR}/lib'
FILTER="\${FILTER/\${FILTER_SRC}/\${FILTER_DST}}"
FILTER_SRC='-L/lib64'
FILTER_DST='-L${CD_TARGET_DIR}/lib64'
FILTER="\${FILTER/\${FILTER_SRC}/\${FILTER_DST}}"
FILTER_SRC='-L/usr/lib'
FILTER_DST='-L${CD_TARGET_DIR}/usr/lib'
FILTER="\${FILTER/\${FILTER_SRC}/\${FILTER_DST}}"
FILTER_SRC='-L/usr/lib64'
FILTER_DST='-L${CD_TARGET_DIR}/usr/lib64'
FILTER="\${FILTER/\${FILTER_SRC}/\${FILTER_DST}}"
ARGS[index]=\${FILTER}
done
exec "${CD_TOOL_PATH}" --sysroot="${CD_TARGET_DIR}" "\${ARGS[@]}"
EOF

    if [ ! -z "${CD_USE_DISTCC}" ]; then
      ln -fs ${CD_NODEBUG:--v} "./${CD_TARGET}-${CD_TOOL}" "${CD_WRAPPER_INSTALL_DIR}/bin/${CD_TOOL}" || cd_die
    fi

    chmod ${CD_NODEBUG:--v} 755 "${CD_WRAPPER_INSTALL_DIR}/bin/${CD_TARGET}-${CD_TOOL}" || cd_die
    eend 0

  fi

done

CD_PYTHON_VERS=$(find "${CD_PYTHON_PREFIX_DIR}/bin" -regex ".*python[0-9]+.[\.0-9]+[a-z]*$" | sed 's/.*\/python//g' | sort | uniq)

for CD_PYTHON_VER in ${CD_PYTHON_VERS}; do
ebegin "Generating wrapper for python ${CD_PYTHON_VER}"

CD_PYTHON_MAJ=$(echo ${CD_PYTHON_VER} | cut -d'.' -f1)

cat << EOF > "${CD_WRAPPER_INSTALL_DIR}/bin/python${CD_PYTHON_VER}-config"
#!/bin/sh
exec "${CD_TARGET_DIR}/usr/bin/python${CD_PYTHON_VER}-config" "\${@}"
EOF

chmod ${CD_NODEBUG:--v} 750 "${CD_WRAPPER_INSTALL_DIR}/bin/python${CD_PYTHON_VER}-config"
ln -fs ${CD_NODEBUG:--v} ./python${CD_PYTHON_VER}-config "${CD_WRAPPER_INSTALL_DIR}/bin/python-config"
ln -fs ${CD_NODEBUG:--v} ./python${CD_PYTHON_VER}-config "${CD_WRAPPER_INSTALL_DIR}/bin/python${CD_PYTHON_MAJ}-config"

for CD_LIB_DIR in lib lib64; do

cat << EOF > "${CD_WRAPPER_INSTALL_DIR}/${CD_LIB_DIR}/sitecustomize.py"
import os
import sys
import site
import distutils.sysconfig

abiflags = ''
if hasattr(sys, 'abiflags'):
  abiflags = sys.abiflags

python_name = 'python' + distutils.sysconfig.get_python_version()
python_name_abi = 'python' + distutils.sysconfig.get_python_version() + abiflags

sys.path, sys_path = sys.path[:1], sys.path[1:]
site.addsitedir(os.path.join('${CD_TARGET_DIR}', '${CD_TARGET_PYTHON_PREFIX_DIR}', '${CD_LIB_DIR}', python_name, 'site-packages'))
sys.path.extend(sys_path)

sys.path, sys_path = sys.path[:1], sys.path[1:]
site.addsitedir(os.path.join('${CD_WRAPPER_PREFIX_DIR}', '${CD_LIB_DIR}', python_name))
sys.path.extend(sys_path)

#if '_sysconfigdata' in sys.modules:
#  del sys.modules['_sysconfigdata']
#import _sysconfigdata

#for key in ['LIBP', 'LIBPL', 'LIBDIR', 'INCLUDEPY', 'INCLUDEDIR', 'CONFINCLUDEPY', 'CONFINCLUDEDIR']:
#    if key in _sysconfigdata.build_time_vars and not '${CD_TARGET_DIR}' in _sysconfigdata.build_time_vars[key]:
#        _sysconfigdata.build_time_vars[key] = '${CD_TARGET_DIR}' + _sysconfigdata.build_time_vars[key]

#for key in _sysconfigdata.build_time_vars:
#  print(key, _sysconfigdata.build_time_vars[key])

if 'distutils.sysconfig' in sys.modules:
  del sys.modules['distutils.sysconfig']
import distutils.sysconfig

if 'sysconfig' in sys.modules:
  del sys.modules['sysconfig']
import sysconfig

#def get_python_lib(plat_specific=0, standard_lib=0, prefix=None):
#    if prefix:
#      libpython = os.path.join(prefix, '${CD_LIB_DIR}', python_name)
#    else:
#      libpython = os.path.join('${CD_TARGET_DIR}', '${CD_TARGET_PYTHON_PREFIX_DIR}', '${CD_LIB_DIR}', python_name)
#    if standard_lib:
#      return libpython
#    else:
#      return os.path.join(libpython, 'site-packages')

def get_python_inc(plat_specific=0, prefix=None):
  if prefix:
    return os.path.join(prefix, "include", python_name_abi)
  else:
    return os.path.join('${CD_TARGET_DIR}', '${CD_TARGET_PYTHON_PREFIX_DIR}', 'include', python_name_abi)

#distutils.sysconfig.get_python_lib = get_python_lib
distutils.sysconfig.get_python_inc = get_python_inc

sys.base_exec_prefix = '${CD_PYTHON_PREFIX_DIR}'
sys.base_prefix = '${CD_PYTHON_PREFIX_DIR}'
sys.exec_prefix = '${CD_PYTHON_PREFIX_DIR}'
sys.prefix = '${CD_PYTHON_PREFIX_DIR}'
EOF

mkdir -p ${CD_NODEBUG:--v} "${CD_WRAPPER_INSTALL_DIR}/${CD_LIB_DIR}/python${CD_PYTHON_VER}" || cd_die

ln -fs ${CD_NODEBUG:--v} "${CD_TARGET_DIR}/${CD_TARGET_PKGCONFIG_PREFIX_DIR}/${CD_LIB_DIR}/pkgconfig/python-${CD_PYTHON_VER}.pc" "${CD_WRAPPER_INSTALL_DIR}/${CD_LIB_DIR}/pkgconfig/python.pc" || cd_die
ln -fs ${CD_NODEBUG:--v} "${CD_TARGET_DIR}/${CD_TARGET_PKGCONFIG_PREFIX_DIR}/${CD_LIB_DIR}/pkgconfig/python-${CD_PYTHON_VER}.pc" "${CD_WRAPPER_INSTALL_DIR}/${CD_LIB_DIR}/pkgconfig/python-${CD_PYTHON_MAJ}.pc" || cd_die
ln -fs ${CD_NODEBUG:--v} "${CD_TARGET_DIR}/${CD_TARGET_PKGCONFIG_PREFIX_DIR}/${CD_LIB_DIR}/pkgconfig/python-${CD_PYTHON_VER}.pc" "${CD_WRAPPER_INSTALL_DIR}/${CD_LIB_DIR}/pkgconfig/python-${CD_PYTHON_VER}.pc" || cd_die

ln -fs ${CD_NODEBUG:--v} "${CD_TARGET_DIR}/${CD_TARGET_PYTHON_PREFIX_DIR}/${CD_LIB_DIR}/python${CD_PYTHON_VER}/sysconfig.py" "${CD_WRAPPER_INSTALL_DIR}/${CD_LIB_DIR}/python${CD_PYTHON_VER}/sysconfig.py" || cd_die

if [ -d "${CD_TARGET_DIR}/${CD_TARGET_PYTHON_PREFIX_DIR}/${CD_LIB_DIR}/python${CD_PYTHON_VER}/" ]; then
  if [ ! -z "$(find "${CD_TARGET_DIR}/${CD_TARGET_PYTHON_PREFIX_DIR}/${CD_LIB_DIR}/python${CD_PYTHON_VER}/" -name "_sysconfigdata*.py" | head -n 1)" ]; then
    ln -fs ${CD_NODEBUG:--v} "$(find "${CD_TARGET_DIR}/${CD_TARGET_PYTHON_PREFIX_DIR}/${CD_LIB_DIR}/python${CD_PYTHON_VER}/" -name "_sysconfigdata*.py" | head -n 1)" "${CD_WRAPPER_INSTALL_DIR}/${CD_LIB_DIR}/python${CD_PYTHON_VER}/_sysconfigdata.py" || cd_die
  fi
fi

done

eend 0
done

export CD_WRAPPER_DIR CD_WRAPPER_PREFIX_DIR CD_WRAPPER_INSTALL_DIR
