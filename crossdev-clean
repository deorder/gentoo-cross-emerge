#!/bin/bash

CD_CROSSDEV_ARGS=()

CD_CUR_DIR=$(dirname "${BASH_SOURCE[0]}")

source "${CD_CUR_DIR}/crossdev-functions.sh"

cd_parse_arguments $@

cd_parse_extra_arguments() {

  while (( ${#1} )); do
    case ${1} in
      *-cd-confirm)
      CD_CONFIRM=1
      ;;
      --)
      shift;
      while (( ${#@} )); do
        CD_CROSSDEV_ARGS+=(${1})
        shift
      done
      break
      ;;
      *)
      CD_CROSSDEV_ARGS+=(${1})
      ;;
    esac
    shift
  done

}

cd_parse_extra_arguments "${CD_ARGS[@]}"

if [ ! -z "${CD_HELP}" ]; then
  cd_print_usage_header
  exit 1
fi

if [ ! -z "${CD_CONFIRM}" ]; then
  ebegin "Cleaning crossdev environment ${CD_TARGET}"

  if [ -f "${CD_CONFIG_DIR}/crossdev-clean-pre" ]; then
    ebegin "Executing crossdev clean pre hook"
    source "${CD_CONFIG_DIR}/crossdev-clean-pre" || cd_die
    eend 0
  fi

  if mount | grep -q "${CD_TARGET_DIR}"; then
    eerror "Mounted filesystems in subdirectories detected, exiting"; exit 0
  fi

  ebegin "Starting real crossdev with: ${CD_CROSSDEV_ARGS[*]}"
  CFLAGS="-O2 -pipe" CXXFLAGS="-O2 -pipe" PORTDIR_OVERLAY="" crossdev -C --target ${CD_TARGET} "${CD_CROSSDEV_ARGS[@]}" || cd_die
  eend 0

  if [ -f "${CD_CONFIG_DIR}/crossdev-clean-post" ]; then
    ebegin "Executing crossdev clean post hook"
    source "${CD_CONFIG_DIR}/crossdev-clean-post" || cd_die
    eend 0
  fi

  eend 0
else
  ewarn "Are you sure? If yes, add --cd-confirm as an argument"
fi
