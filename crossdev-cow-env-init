#!/bin/bash

CD_CUR_DIR=$(dirname "${BASH_SOURCE[0]}")

source "${CD_CUR_DIR}/crossdev-functions.sh"

cd_parse_arguments $@

if [ ! -z "${CD_HELP}" ]; then
  cd_print_usage_header
  exit 1
fi

export CD_COW_DIR=${CD_TMP_DIR}/cow-${CD_TARGET}
export CD_UNION_DIR=${CD_TMP_DIR}/union-${CD_TARGET}

mkdir -p "${CD_COW_DIR}"; mkdir -p "${CD_UNION_DIR}"

export CD_WRAPPER_DIR=${CD_TMP_DIR}/wrapper-cow-${CD_TARGET}
export CD_WRAPPER_PREFIX_DIR=${CD_TMP_DIR}/wrapper-cow-${CD_TARGET}/usr
export CD_WRAPPER_INSTALL_DIR=${CD_TMP_DIR}/wrapper-cow-${CD_TARGET}/usr

if ! cd_is_mount "${CD_UNION_PREFIX_DIR}"; then

  if [ -f "${CD_CONFIG_DIR}/crossdev-cow-env-init-pre" ]; then
    ebegin "Executing crossdev cow env init pre hook"
    source "${CD_CONFIG_DIR}/crossdev-cow-env-init-pre" || cd_die
    eend 0
  fi

  ebegin "Initializing cow environment"

  ebegin "Creating wrapper environment"
  source "${CD_SCRIPT_DIR}/crossdev-wrapper-env-create" "${CD_ARGS[@]}" || cd_die
  eend 0

  ebegin "Mounting unionfs"
  unionfs -o cow "${CD_COW_DIR}"=RW:"${CD_WRAPPER_DIR}"=RO:/=RO "${CD_UNION_DIR}" || cd_die
  eend 0

  eend 0

  if [ -f "${CD_CONFIG_DIR}/crossdev-cow-env-init-post" ]; then
    ebegin "Executing crossdev cow env init post hook"
    source "${CD_CONFIG_DIR}/crossdev-cow-env-init-post" || cd_die
    eend 0
  fi
   
else
  eerror "Cow environment already mounted, cannot initialize"
fi
