#!/bin/bash

CD_COW_INIT_ARGS=()

CD_CUR_DIR=$(dirname "${BASH_SOURCE[0]}")

source "${CD_CUR_DIR}/crossdev-functions.sh"

cd_parse_arguments $@

cd_parse_extra_arguments() {

  while (( ${#1} )); do
    case ${1} in
      *-cd-src-dir)
      shift; CD_SRC_DIR="${1}"
      ;;
      *-cd-src-dir=*)
      CD_SRC_DIR="${1#*=}"
      ;;
      *-cd-env-dir)
      shift; CD_ENV_DIR="${1}"
      ;;
      *-cd-env-dir=*)
      CD_ENV_DIR="${1#*=}"
      ;;
      --)
      shift;
      while (( ${#@} )); do
        CD_COW_INIT_ARGS+=(${1})
        shift
      done
      break
      ;;
      *)
      CD_COW_INIT_ARGS+=(${1})
      ;;
    esac
    shift
  done

  if [ -z "${CD_SRC_DIR}" ]; then
    export CD_SRC_DIR="${CD_TARGET_DIR}"
  fi

  if [ -z "${CD_ENV_DIR}" ]; then
    export CD_ENV_DIR=${CD_TMP_DIR}/env-${CD_TARGET}
  fi

}

cd_parse_extra_arguments "${CD_ARGS[@]}"

if [ ! -z "${CD_HELP}" ]; then
  cd_print_usage_header
  echo "--cd-src-dir <dir> (Source dir) (${CD_SRC_DIR}}"
  echo "--cd-env-dir <dir> (Environment dir) (${CD_ENV_DIR}}"
  exit 1
fi

export CD_ENV_COW_DIR=${CD_ENV_DIR}/cow-${CD_TARGET}
export CD_ENV_WORK_DIR=${CD_ENV_DIR}/work-${CD_TARGET}
export CD_ENV_UNION_DIR=${CD_ENV_DIR}/union-${CD_TARGET}
export CD_ENV_OVERLAY_DIR=${CD_ENV_DIR}/overlay-${CD_TARGET}

export CD_OVERLAY_TEMPLATES_DIR=${CD_SCRIPT_DIR}/overlay_templates
export CD_USER_OVERLAY_TEMPLATES_DIR=${CD_CONFIG_DIR}/overlay_templates

function bind_wrapper_map_dir() {
  local source=${1} dest=${2}
  mkdir -p ${CD_NODEBUG:--v} "${CD_ENV_OVERLAY_DIR}/${dest}" || cd_die
  if [ -e "${source}" ]; then
    if ! cd_is_mount "${CD_ENV_UNION_DIR}/${dest}"; then
      ebegin "Bind map dir: ${dest}"
      mount ${CD_NODEBUG:--v} -o rw,bind "${source}" "${CD_ENV_UNION_DIR}/${dest}" || cd_die
      eend 0
    fi
  fi
}

function bind_union_overlay_dir() {
  local dest=${1}
  if [ -e "${CD_ENV_OVERLAY_DIR}/${dest}" ]; then
    if ! cd_is_mount_of_type "${CD_ENV_UNION_DIR}/${dest}" "overlay"; then
      ebegin "Bind overlay dir: ${dest}"
      mkdir -p ${CD_NODEBUG:--v} "${CD_ENV_COW_DIR}/${dest}" || cd_die
      mkdir -p ${CD_NODEBUG:--v} "${CD_ENV_WORK_DIR}/${dest}" || cd_die
      mount ${CD_NODEBUG:--v} -t overlay overlay -o lowerdir="${CD_ENV_UNION_DIR}/${dest}":"${CD_ENV_OVERLAY_DIR}/${dest}",upperdir="${CD_ENV_COW_DIR}/${dest}",workdir="${CD_ENV_WORK_DIR}/${dest}" "${CD_ENV_UNION_DIR}/${dest}" || cd_die
      eend 0
    fi
  fi
}
 
if ! cd_is_mount "${CD_ENV_UNION_DIR}"; then

  if [ -f "${CD_CONFIG_DIR}/crossdev-cow-env-init-pre" ]; then
    ebegin "Executing crossdev cow env init pre hook"
    source "${CD_CONFIG_DIR}/crossdev-cow-env-init-pre" || cd_die
    eend 0
  fi

  ebegin "Initializing cow environment"

  ebegin "Creating environment directory"
  mkdir -p ${CD_NODEBUG:--v} "${CD_ENV_DIR}" || cd_die
  eend 0

  ebegin "Mounting environment filesystem"
  mount ${CD_NODEBUG:--v} -t tmpfs -o rw env-${CD_TARGET} "${CD_ENV_DIR}" || cd_die
  eend 0

  ebegin "Creating environment subdirectories"
  mkdir -p ${CD_NODEBUG:--v} "${CD_ENV_COW_DIR}" || cd_die
  mkdir -p ${CD_NODEBUG:--v} "${CD_ENV_WORK_DIR}" || cd_die
  mkdir -p ${CD_NODEBUG:--v} "${CD_ENV_UNION_DIR}" || cd_die
  mkdir -p ${CD_NODEBUG:--v} "${CD_ENV_OVERLAY_DIR}" || cd_die
  eend 0

  ebegin "Initializing overlay directory"
  if [ -d "${CD_OVERLAY_TEMPLATES_DIR}/all" ]; then
    ebegin "Copying overlay template for all"
    cp -a ${CD_NODEBUG:--v} "${CD_OVERLAY_TEMPLATES_DIR}/all"/* "${CD_ENV_OVERLAY_DIR}" || cd_die
    eend 0
  fi
  if [ -d "${CD_USER_OVERLAY_TEMPLATES_DIR}/all" ]; then
    ebegin "Copying user overlay template for all"
    cp -a ${CD_NODEBUG:--v} "${CD_USER_OVERLAY_TEMPLATES_DIR}/all"/* "${CD_ENV_OVERLAY_DIR}" || cd_die
    eend 0
  fi
  if [ "${CD_TARGET}" = "${CD_HOST}" ]; then
    if [ -d "${CD_OVERLAY_TEMPLATES_DIR}/host" ]; then
      ebegin "Copying overlay template for host"
      cp -a ${CD_NODEBUG:--v} "${CD_OVERLAY_TEMPLATES_DIR}/host"/* "${CD_ENV_OVERLAY_DIR}" || cd_die
      eend 0
    fi
    if [ -d "${CD_USER_OVERLAY_TEMPLATES_DIR}/host" ]; then
      ebegin "Copying user overlay template for host"
      cp -a ${CD_NODEBUG:--v} "${CD_USER_OVERLAY_TEMPLATES_DIR}/host"/* "${CD_ENV_OVERLAY_DIR}" || cd_die
      eend 0
    fi
  else
    if [ -d "${CD_OVERLAY_TEMPLATES_DIR}/target" ]; then
      ebegin "Copying overlay template for target"
      cp -a ${CD_NODEBUG:--v} "${CD_OVERLAY_TEMPLATES_DIR}/target"/* "${CD_ENV_OVERLAY_DIR}" || cd_die
      eend 0
    fi
    if [ -d "${CD_USER_OVERLAY_TEMPLATES_DIR}/target" ]; then
      ebegin "Copying user overlay template for target"
      cp -a ${CD_NODEBUG:--v} "${CD_USER_OVERLAY_TEMPLATES_DIR}/target"/* "${CD_ENV_OVERLAY_DIR}" || cd_die
      eend 0
    fi
  fi
  if [ -d "${CD_OVERLAY_TEMPLATES_DIR}/${CD_TARGET}" ]; then
    ebegin "Copying overlay template for ${CD_TARGET}"
    cp -a ${CD_NODEBUG:--v} "${CD_OVERLAY_TEMPLATES_DIR}/${CD_TARGET}"/* "${CD_ENV_OVERLAY_DIR}" || cd_die
    eend 0
  fi
  if [ -d "${CD_USER_OVERLAY_TEMPLATES_DIR}/${CD_TARGET}" ]; then
    ebegin "Copying yser overlay template for ${CD_TARGET}"
    cp -a ${CD_NODEBUG:--v} "${CD_USER_OVERLAY_TEMPLATES_DIR}/${CD_TARGET}"/* "${CD_ENV_OVERLAY_DIR}" || cd_die
    eend 0
  fi
  eend 0

  ebegin "Mounting union filesystem"
  mount ${CD_NODEBUG:--v} -t overlay overlay -o lowerdir="${CD_SRC_DIR}":"${CD_ENV_OVERLAY_DIR}",upperdir="${CD_ENV_COW_DIR}",workdir="${CD_ENV_WORK_DIR}" "${CD_ENV_UNION_DIR}" || cd_die
  eend 0

  if [ -f "${CD_CONFIG_DIR}/crossdev-cow-env-init-mount" ]; then
    ebegin "Executing crossdev cow env init mount hook"
    source "${CD_CONFIG_DIR}/crossdev-cow-env-init-mount" || cd_die
    eend 0
  fi

  ebegin "Binding host/target mappings"
  bind_wrapper_map_dir "$(cd_portageq "${CD_PREFIX_DIR}" get_repo_path / gentoo)" "$(cd_portageq "${CD_ENV_UNION_DIR}" get_repo_path / gentoo)" || cd_die
  bind_wrapper_map_dir "$(cd_portageq "${CD_PREFIX_DIR}" envvar PORTAGE_TMPDIR)" "$(cd_portageq "${CD_ENV_UNION_DIR}" envvar PORTAGE_TMPDIR)" || cd_die
  bind_wrapper_map_dir "$(cd_portageq "${CD_PREFIX_DIR}" envvar DISTDIR)" "$(cd_portageq "${CD_ENV_UNION_DIR}" envvar DISTDIR)" || cd_die
  bind_wrapper_map_dir "${CD_SCRIPT_DIR}/" "${CD_SCRIPT_DIR}" || cd_die
  bind_wrapper_map_dir "${CD_TMP_DIR}/" "${CD_TMP_DIR}" || cd_die
  bind_wrapper_map_dir "${CD_PREFIX_DIR}/" "/host" || cd_die
  eend 0

  eend 0

  if [ -f "${CD_CONFIG_DIR}/crossdev-cow-env-init-post" ]; then
    ebegin "Executing crossdev cow env init post hook"
    source "${CD_CONFIG_DIR}/crossdev-cow-env-init-post" || cd_die
    eend 0
  fi

  ebegin "Binding host/target overlays"
  bind_union_overlay_dir "/etc/portage"
  eend 0

else
  eerror "Cow environment already mounted, cannot initialize"
fi
