#!/bin/bash

CD_CUR_DIR=$(dirname "${BASH_SOURCE[0]}")

source "${CD_CUR_DIR}/crossdev-functions.sh"

cd_parse_arguments $@

if [ ! -z "${CD_HELP}" ]; then
  cd_print_usage_header
  exit 1
fi

export CD_COW_DIR=${CD_TMP_DIR}/cow-${CD_TARGET}
export CD_WORK_DIR=${CD_TMP_DIR}/work-${CD_TARGET}
export CD_UNION_DIR=${CD_TMP_DIR}/union-${CD_TARGET}
export CD_WRAPPER_DIR=${CD_TMP_DIR}/wrapper-cow-${CD_TARGET}

export CD_CHOST=$(cd_portageq "${CD_PREFIX}" envvar CHOST)
export CD_CHOST_TARGET_DIR=${CD_PREFIX_DIR}/usr/${CD_CHOST}/${CD_TARGET}

if [ -f "${CD_CONFIG_DIR}/crossdev-cow-env-bashrc" ]; then
  CD_BASH_RC_FILE="${CD_CONFIG_DIR}/crossdev-cow-env-bashrc"
else
  CD_BASH_RC_FILE="$(dirname $(readlink -e ${CD_SCRIPT_FILE}))/crossdev-cow-env-bashrc"
fi

function wrapper_map_dir() {
  local source=${1} dest=${2}
  mkdir -p ${CD_NODEBUG:--v} "${CD_WRAPPER_DIR}/${dest}" || cd_die
  if ! cd_is_mount "${CD_WRAPPER_DIR}/${dest}"; then
    mount -o ro,bind "${source}" "${CD_WRAPPER_DIR}/${dest}" || cd_die
  fi
}
 
if ! cd_is_mount "${CD_UNION_PREFIX_DIR}"; then

  if [ -f "${CD_CONFIG_DIR}/crossdev-cow-env-init-pre" ]; then
    ebegin "Executing crossdev cow env init pre hook"
    source "${CD_CONFIG_DIR}/crossdev-cow-env-init-pre" || cd_die
    eend 0
  fi

  ebegin "Initializing cow environment"

  ebegin "Creating directories"
  mkdir -p ${CD_NODEBUG:--v} "${CD_COW_DIR}" || cd_die
  mkdir -p ${CD_NODEBUG:--v} "${CD_WORK_DIR}" || cd_die
  mkdir -p ${CD_NODEBUG:--v} "${CD_UNION_DIR}" || cd_die
  mkdir -p ${CD_NODEBUG:--v} "${CD_WRAPPER_DIR}" || cd_die
  eend 0

  ebegin "Creating wrapper environment"
  cp -a ${CD_NODEBUG:--v} "${CD_BASH_RC_FILE}" "${CD_WRAPPER_DIR}"/profile || cd_die
  chmod ${CD_NODEBUG:--v} 755 "${CD_WRAPPER_DIR}"/profile || cd_die
  eend 0

  ebegin "Binding host/target mappings"
  #wrapper_map_dir "${CD_CHOST_TARGET_DIR}/gcc-bin" "/usr/${CD_TARGET}/gcc-bin" || cd_die
  #wrapper_map_dir "${CD_CHOST_TARGET_DIR}/binutils-bin" "/usr/${CD_TARGET}/binutils-bin" || cd_die
  eend 0

  ebegin "Mounting overlayfs"
  mount -t overlay overlay -o lowerdir="${CD_WRAPPER_DIR}":"${CD_TARGET_DIR}",upperdir="${CD_COW_DIR}",workdir="${CD_WORK_DIR}" "${CD_UNION_DIR}" || cd_die
  eend 0

  eend 0

  if [ -f "${CD_CONFIG_DIR}/crossdev-cow-env-init-post" ]; then
    ebegin "Executing crossdev cow env init post hook"
    source "${CD_CONFIG_DIR}/crossdev-cow-env-init-post" || cd_die
    eend 0
  fi
   
else
  eerror "Cow environment already mounted, cannot initialize"
fi
