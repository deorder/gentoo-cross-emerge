#!/bin/bash

CD_CUR_DIR=$(dirname "${BASH_SOURCE[0]}")

source "${CD_CUR_DIR}/crossdev-functions.sh"

cd_parse_arguments $@

if [ ! -z "${CD_HELP}" ]; then
  cd_print_usage_header
  exit 1
fi

export CD_COW_DIR=${CD_TMP_DIR}/cow-${CD_TARGET}
export CD_UNION_DIR=${CD_TMP_DIR}/union-${CD_TARGET}
export CD_WRAPPER_DIR=${CD_TMP_DIR}/wrapper-cow-${CD_TARGET}

function wrapper_unmap_dir() {
  local dest=${1}
  if cd_is_mount "${CD_WRAPPER_DIR}/${dest}"; then
    umount "${CD_WRAPPER_DIR}/${dest}" || cd_die
  fi
}

if [ -d ${CD_UNION_DIR} ]; then
  if cd_is_mount ${CD_UNION_DIR}; then

    if [ -f "${CD_CONFIG_DIR}/crossdev-cow-env-uninit-pre" ]; then
      ebegin "Executing crossdev cow env uninit pre hook"
      source "${CD_CONFIG_DIR}/crossdev-cow-env-uninit-pre" || cd_die
      eend 0
    fi

    ebegin "Uninitializing cow environment"

    ebegin "Killing all remaining processes"
    fuser -Mkv "${CD_UNION_DIR}"
    eend 0

    ebegin "Unbinding host/target mappings"
    #wrapper_unmap_dir "/usr/${CD_TARGET}/gcc-bin" || cd_die
    #wrapper_unmap_dir "/usr/${CD_TARGET}/binutils-bin" || cd_die
    eend 0

    ebegin "Unmounting unionfs"
    umount -v "${CD_UNION_DIR}" || cd_die
    eend 0

    eend 0

    if [ -f "${CD_CONFIG_DIR}/crossdev-cow-env-uninit-post" ]; then
      ebegin "Executing crossdev cow env uninit post hook"
      source "${CD_CONFIG_DIR}/crossdev-cow-env-uninit-post" || cd_die
      eend 0
    fi

  else
    eerror "Cow environment not mounted, cannot uninitialize"
  fi
else
  eerror "Not a directory, cannot uninitialize"
fi

