#!/bin/bash

CD_CUR_DIR=$(dirname "${BASH_SOURCE[0]}")

source "${CD_CUR_DIR}/crossdev-functions.sh"

cd_parse_arguments $@

cd_parse_extra_arguments() {

  while (( ${#1} )); do
    case ${1} in
      --)
      shift;
      while (( ${#@} )); do
        CD_EMERGE_ARGS+=(${1})
        shift
      done
      break
      ;;
      *)
      CD_EMERGE_ARGS+=(${1})
      ;;
    esac
    shift
  done

}

cd_parse_extra_arguments "${CD_ARGS[@]}"

if [ ! -z "${CD_HELP}" ]; then
  cd_print_usage_header
  exit 1
fi

export CD_WRAPPER_DIR=${CD_TMP_DIR}/wrapper-${CD_TARGET}
export CD_WRAPPER_PREFIX_DIR=${CD_TMP_DIR}/wrapper-${CD_TARGET}
export CD_WRAPPER_INSTALL_DIR=${CD_TMP_DIR}/wrapper-${CD_TARGET}

if [ -f "${CD_CONFIG_DIR}/crossdev-emerge-pre" ]; then
  ebegin "Executing crossdev emerge pre hook"
  source "${CD_CONFIG_DIR}/crossdev-emerge-pre" || cd_die
  eend 0
fi

ebegin "Creating wrapper environment"
source "${CD_SCRIPT_DIR}/crossdev-wrapper-env-create" "${CD_ARGS[@]}" || cd_die
eend 0

ebegin "Starting real emerge with: ${CD_EMERGE_ARGS[*]}"
export PYTHONPATH="${CD_WRAPPER_PREFIX_DIR}/lib"
export PREROOTPATH="${CD_WRAPPER_PREFIX_DIR}/bin"
export PATH="${CD_WRAPPER_PREFIX_DIR}/bin:${PATH}"
export _PYTHON_SYSCONFIGDATA_NAME=_sysconfigdata

export CC="${CD_WRAPPER_PREFIX_DIR}/bin/${CD_TARGET}-gcc"
export CXX="${CD_WRAPPER_PREFIX_DIR}/bin/${CD_TARGET}-g++"
export CPP="${CD_WRAPPER_PREFIX_DIR}/bin/${CD_TARGET}-cpp"

if [ ! -z "${CD_COWHOME}" ]; then
  FEATURES="-sandbox -usersandbox -userpriv" ROOT="${CD_TARGET_DIR}/" PORTAGE_CONFIGROOT="${CD_TARGET_DIR}/" ${CD_TARGET}-emerge --config-root="${CD_TARGET_DIR}/" "${CD_EMERGE_ARGS[@]}" || cd_die
else
  ROOT="${CD_TARGET_DIR}/" PORTAGE_CONFIGROOT="${CD_TARGET_DIR}/" ${CD_TARGET}-emerge --config-root="${CD_TARGET_DIR}/" "${CD_EMERGE_ARGS[@]}" || cd_die
fi
eend 0

if [ -f "${CD_CONFIG_DIR}/crossdev-emerge-post" ]; then
  ebegin "Executing crossdev emerge post hook"
  source "${CD_CONFIG_DIR}/crossdev-emerge-post" || cd_die
  eend 0
fi
