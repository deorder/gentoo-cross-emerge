#!/bin/bash

CD_USE_LIBC="glibc"
CD_CROSSDEV_ARGS=()

CD_CUR_DIR=$(dirname "${BASH_SOURCE[0]}")

source "${CD_CUR_DIR}/crossdev-functions.sh"

cd_parse_arguments $@

cd_parse_extra_arguments() {

  while (( ${#1} )); do
    case ${1} in
      --cd-use-rpi)
      CD_USE_RPI=1
      ;;
      --cd-use-musl)
      CD_USE_LIBC="musl"
      ;;
      --cd-use-glibc)
      CD_USE_LIBC="glibc"
      ;;
      --)
      shift;
      while (( ${#@} )); do
        CD_CROSSDEV_ARGS+=(${1})
        shift
      done
      break
      ;;
      *)
      CD_CROSSDEV_ARGS+=(${1})
      ;;
    esac
    shift
  done

}

cd_parse_extra_arguments "${CD_ARGS[@]}"

if [[ ! -z "${CD_HELP}" ]]; then
  cd_print_usage_header
  echo "--cd-use-rpi (Use RPi supported kernel)"
  echo "--cd-use-musl (Use musl as the libc)"
  echo "--cd-use-glibc (Use glibc as the libc)"
  exit 1
fi

if [[ "${CD_USE_LIBC}" == "musl" ]]; then
  einfo "Using musl";
fi

if [[ "${CD_USE_LIBC}" == "glibc" ]]; then
  if [[ ! -z "${CD_LIBC_VER}" ]]; then
    einfo "Using glibc version: ${CD_LIBC_VER}";
  else
    CD_LIBC_VER=$(qatom -F '%{PVR}' $(qlist -Ive sys-libs/glibc))
    einfo "No glibc version specified, using: ${CD_LIBC_VER}";
  fi
  CD_CROSSDEV_ARGS+=("--libc" "${CD_LIBC_VER}")
fi

if [[ ! -z "${CD_KERNEL_VER}" ]]; then
  einfo "Using kernel version: ${CD_KERNEL_VER}";
else
  if [[ ! -z "${CD_USE_RPI}" ]]; then
    CD_KERNEL_VER="4.19"
    einfo "Using rpi kernel version: ${CD_KERNEL_VER}";
  else
    CD_KERNEL_VER=$(qatom -F '%{PVR}' $(qlist -Ive sys-kernel/linux-headers))
    einfo "No kernel version specified, using: ${CD_KERNEL_VER}";
  fi
fi
CD_CROSSDEV_ARGS+=("--kernel" "${CD_KERNEL_VER}")

if [[ ! -z "${CD_GCC_VER}" ]]; then
  einfo "Using gcc version: ${CD_GCC_VER}";
else
  CD_GCC_VER=$(qatom -F '%{PVR}' $(qfile -v $(realpath /usr/bin/gcc) | cut -d' ' -f1))
  einfo "No gcc version specified, using: ${CD_GCC_VER}";
fi
CD_CROSSDEV_ARGS+=("--gcc" "${CD_GCC_VER}")

if [[ ! -z "${CD_BINUTILS_VER}" ]]; then
  einfo "Using binutils version: ${CD_BINUTILS_VER}";
else
  CD_BINUTILS_VER=$(qatom -F '%{PVR}' $(qfile -v $(realpath /usr/bin/ld) | cut -d' ' -f1))
  einfo "No binutils version specified, using: ${CD_BINUTILS_VER}";
fi
CD_CROSSDEV_ARGS+=("--binutils" "${CD_BINUTILS_VER}")

ebegin "Starting real crossdev with: ${CD_CROSSDEV_ARGS[*]}"
CFLAGS="-O2 -pipe" CXXFLAGS="-O2 -pipe" PORTDIR_OVERLAY="" crossdev --target ${CD_TARGET} "${CD_CROSSDEV_ARGS[@]}" || cd_die
eend 0

ebegin "Moving the /etc/portage dir away"
mv "${CD_TARGET_DIR}/etc/portage" "${CD_TARGET_DIR}/etc/portage.$(date +%Y%m%d%H%M%S)" || cd_die
eend 0

ebegin "Linking lib64 dirs to lib dirs"
ln -fs ./lib "${CD_TARGET_DIR}/usr/lib64" || cd_die
ln -fs ./lib "${CD_TARGET_DIR}/lib64" || cd_die
eend 0

ebegin "Creating initial dirs"
mkdir -p "${CD_TARGET_DIR}/usr/src/linux" || cd_die
mkdir -p "${CD_TARGET_DIR}/etc/portage" || cd_die
mkdir -p "${CD_TARGET_DIR}/packages" || cd_die
eend 0
